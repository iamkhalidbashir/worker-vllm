name: CI - Docker Build and RunPod Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: amoxt/runpod-worker-vllm

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

#   deploy-to-runpod:
#     needs: build-and-push
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Deploy to RunPod
#       env:
#         RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
#         RUNPOD_ENDPOINT: ${{ secrets.RUNPOD_ENDPOINT }}
#       run: |
#         # Install RunPod CLI (if available) or use API calls
#         # This is a placeholder - you'll need to implement the actual deployment logic
#         echo "Deploying to RunPod..."
#         # Example: curl -X POST -H "Authorization: Bearer $RUNPOD_API_KEY" -H "Content-Type: application/json" -d '{"podType": "YOUR_POD_TYPE", "imageName": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"}' $RUNPOD_ENDPOINT
#         # Add your RunPod deployment commands here
